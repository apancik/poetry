/* GRID
Useful classes
 * grid - grid container encapsulating rows or columns
 * row - optional container used to clear some columns not to overflow, has modifiers such as .slim or .natural-padding to modify spacing
 * one column ... twelve columns - column classes
 * pull right ... pull left - modifiers used to change the alignment of columns, useful when you want to avoid empty spacer column to get something to the other side
*/

@import "variables";

@column-number: 12; // max/recommended 12 - as it is divisible by both 3 and 4
@column-width: (@grid-width - @column-number * @gutter-width) / @column-number;

// Enable natural box model for all elements, you'll thank this later
*, *:before, *:after {
    -moz-box-sizing: border-box;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
 }

// Making sure "width: 100%" is never less than the actual @grid-width
body {
    min-width:  @grid-width;
}

// ===============
// Grid definition
// ===============

.grid {
    // Fixed width & centered
    width: @grid-width;
    margin: 0 auto;
    padding: 0;

    &.visible {
        .column, .columns {
            background-color: rgba(255, 0, 0, 0.3);
        }
    }

    .column,
    .columns {
        display: inline;
        float: left;
        margin-left: @gutter-width / 2;
        margin-right: @gutter-width / 2;

        &.one {
            width: @column-width * 1 + @gutter-width * 0;
        }
        &.two {
            width: @column-width * 2 + @gutter-width * 1;
        }
        &.three {
            width: @column-width * 3 + @gutter-width * 2;
        }
        &.four {
            width: @column-width * 4 + @gutter-width * 3;
        }
        &.five {
            width: @column-width * 5 + @gutter-width * 4;
        }
        &.six {
            width: @column-width * 6 + @gutter-width * 5;
        }
        &.seven {
            width: @column-width * 7 + @gutter-width * 6;
        }
        &.eight {
            width: @column-width * 8 + @gutter-width * 7;
        }
        &.nine {
            width: @column-width * 9 + @gutter-width * 8;
        }
        &.ten {
            width: @column-width * 10 + @gutter-width * 9;
        }
        &.eleven {
            width: @column-width * 11 + @gutter-width * 10;
        }
        &.twelve {
            width: @column-width * 12 + @gutter-width * 11;
        }
    }

    .offset-by-one {
        margin-left: @column-width * 1 + @gutter-width * 1;
    }
    .offset-by-two {
        margin-left: @column-width * 2 + @gutter-width * 2;
    }
    .offset-by-three {
        margin-left: @column-width * 3 + @gutter-width * 3;
    }
    .offset-by-four {
        margin-left: @column-width * 4 + @gutter-width * 4;
    }
    .offset-by-five {
        margin-left: @column-width * 5 + @gutter-width * 5;
    }
    .offset-by-six {
        margin-left: @column-width * 6 + @gutter-width * 6;
    }
    .offset-by-seven {
        margin-left: @column-width * 7 + @gutter-width * 7;
    }
    .offset-by-eight {
        margin-left: @column-width * 8 + @gutter-width * 8;
    }
    .offset-by-nine {
        margin-left: @column-width * 9 + @gutter-width * 9;
    }
    .offset-by-ten {
        margin-left: @column-width * 10 + @gutter-width * 10;
    }
    .offset-by-eleven {
        margin-left: @column-width * 11 + @gutter-width * 11;
    }
}

@media only screen and (max-width: 767px) {
    body {
        font-size: 90%;
        min-width: 100%;
    }

    .grid {
        width: 100%;

        .columns,
        .column {
            margin: 0;
            padding-left: 1em;
            padding-right: 1em;
        }

        .column,.columns {
            &.one,
            &.two,
            &.three,
            &.four,
            &.five,
            &.six,
            &.seven,
            &.eight,
            &.nine,
            &.ten,
            &.eleven,
            &.twelve {
                width: 100%;
            }
        }

        .offset-by-one ,
        .offset-by-two ,
        .offset-by-three,
        .offset-by-four ,
        .offset-by-five ,
        .offset-by-six ,
        .offset-by-seven,
        .offset-by-eight ,
        .offset-by-nine ,
        .offset-by-ten ,
        .offset-by-eleven {
            margin: 0;
        }
    }
}

// ==============
// Grid utilities
// ==============

// Individual grids and rows are cleared not to overflow
.grid:after,
.row:before,
.row:after {
    clear: both;
    display: table;
    content: " "; // Opera compatibility
    *zoom: 1; // IE6/7 compatibility
}

// Row has extra margin to let the content breathe
.row {
    padding-top: 3em;
    padding-bottom: 3em;

    &.slim {
        padding: 0;
    }

    &.natural-padding {
        padding-top: 1em;
        padding-bottom: 1em;
    }
}

// Allow to pull/align columns to any side
.pull {
    &.left {
        float: left !important;
    }

    &.right {
        float: right !important;
    }
}
